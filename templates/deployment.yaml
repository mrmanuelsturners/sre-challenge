# templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sre-app.fullname" . }}
  labels:
    {{- include "sre-app.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "sre-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "sre-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - containerPort: {{ .Values.env.PORT }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path }}
              port: {{ .Values.env.PORT }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path }}
              port: {{ .Values.env.PORT }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
          lifecycle:
            postStart:
              exec:
                command:
                - "./sre_technical_challenge"
                - "eval"
                - "Application.ensure_all_started(:sre_technical_challenge); Ecto.Migrator.run(SreTechnicalChallenge.Repo, :up, all: true)"